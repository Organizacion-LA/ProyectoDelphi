name: Build Delphi on Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Compilar con Delphi
        id: build
        run: |
          echo "Compilando con dcc32 desde el workspace"
          $project = "$env:GITHUB_WORKSPACE\ProyectoDelphi.dpr"
          $log = "$env:GITHUB_WORKSPACE\build.log"
          & "C:\Program Files (x86)\Embarcadero\Studio\18.0\bin\dcc32.exe" $project *>&1 | Tee-Object -FilePath $log
          if ($LASTEXITCODE -ne 0) {
            Write-Host "Error de compilación. Guardando log..."
            exit 1
          }
        shell: pwsh
        continue-on-error: false

      - name: Comprimir ejecutable
        if: success()
        run: |
          Compress-Archive -Path "$env:GITHUB_WORKSPACE\ProyectoDelphi.exe" -DestinationPath "$env:GITHUB_WORKSPACE\ProyectoDelphi.zip"
        shell: pwsh

      - name: Verificar existencia del .zip
        if: success()
        run: |
          $zipPath = "$env:GITHUB_WORKSPACE\ProyectoDelphi.zip"
          if (Test-Path $zipPath) {
            Write-Host "✅ El archivo zip fue creado correctamente: $zipPath"
          } else {
            Write-Host "❌ No se encontró el zip. Falló la compresión."
            exit 1
          }
        shell: pwsh

      - name: Subir log de error si falla
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: log-de-compilacion
          path: ${{ github.workspace }}/build.log

      - name: Subir ejecutable a la release (zip)
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ProyectoDelphi.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{ github.workspace }}
